[
  {
    "key": "ctrl+j",
    "command": "-extension.vim_ctrl+j",
    "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
  },
  {
    "key": "ctrl+w ctrl+j",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+w ctrl+k",
    "command": "workbench.action.focusAboveGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+w ctrl+l",
    "command": "workbench.action.focusNextGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+w ctrl+w",
    "command": "workbench.action.nextEditor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+h ctrl+h",
    "command": "workbench.action.previousEditor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+w ctrl+h",
    "command": "workbench.action.focusNextGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+m ctrl+l",
    "command": "workbench.action.moveEditorToRightGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+m ctrl+h",
    "command": "workbench.action.moveEditorToRightGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+m ctrl+j",
    "command": "workbench.action.moveEditorToBelowGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+m ctrl+k",
    "command": "workbench.action.moveEditorToAboveGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+b",
    "command": "-extension.vim_ctrl+b",
    "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+f",
    "command": "-extension.vim_ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+g ctrl+g",
    "command": "typescript.goToSourceDefinition"
  }
]
